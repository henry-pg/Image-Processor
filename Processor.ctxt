#BlueJ class context
comment0.target=Processor
comment1.params=bi
comment1.target=java.awt.image.BufferedImage\ blueify(java.awt.image.BufferedImage)
comment1.text=\r\n\ Example\ colour\ altering\ method\ by\ Mr.\ Cohen.\ This\ method\ will\r\n\ increase\ the\ blue\ value\ while\ reducing\ the\ red\ and\ green\ values.\r\n\ \r\n\ Demonstrates\ use\ of\ packagePixel()\ and\ unpackPixel()\ methods.\r\n\ \r\n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\r\n
comment10.params=bi
comment10.target=java.awt.image.BufferedImage\ greenify(java.awt.image.BufferedImage)
comment11.params=bi
comment11.target=java.awt.image.BufferedImage\ increaseExposure(java.awt.image.BufferedImage)
comment12.params=bi
comment12.target=java.awt.image.BufferedImage\ decreaseExposure(java.awt.image.BufferedImage)
comment13.params=bi
comment13.target=java.awt.image.BufferedImage\ negative(java.awt.image.BufferedImage)
comment14.params=newBi
comment14.target=greenfoot.GreenfootImage\ createGreenfootImageFromBI(java.awt.image.BufferedImage)
comment14.text=\r\n\ Takes\ in\ a\ BufferedImage\ and\ returns\ a\ GreenfootImage.\r\n\ \r\n\ @param\ newBi\ The\ BufferedImage\ to\ convert.\r\n\ \r\n\ @return\ GreenfootImage\ \ \ A\ GreenfootImage\ built\ from\ the\ BufferedImage\ provided.\r\n
comment15.params=rgbaValue
comment15.target=int[]\ unpackPixel(int)
comment15.text=\r\n\ Takes\ in\ an\ rgb\ value\ -\ the\ kind\ that\ is\ returned\ from\ BufferedImage's\r\n\ getRGB()\ method\ -\ and\ returns\ 4\ integers\ for\ easy\ manipulation.\r\n\ \r\n\ By\ Jordan\ Cohen\r\n\ Version\ 0.2\r\n\ \r\n\ @param\ rgbaValue\ The\ value\ of\ a\ single\ pixel\ as\ an\ integer,\ representing<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 8\ bits\ for\ red,\ green\ and\ blue\ and\ 8\ bits\ for\ alpha\:<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>00000000000000000000000000000000</pre>\r\n\ @return\ int[4]\ \ \ Array\ containing\ 4\ shorter\ ints<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>0\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ 3</pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\r\n
comment16.params=r\ g\ b\ a
comment16.target=int\ packagePixel(int,\ int,\ int,\ int)
comment16.text=\r\n\ Takes\ in\ a\ red,\ green,\ blue\ and\ alpha\ integer\ and\ uses\ bit-shifting\r\n\ to\ package\ all\ of\ the\ data\ into\ a\ single\ integer.\r\n\ \r\n\ @param\ \ \ int\ red\ value\ (0-255)\r\n\ @param\ \ \ int\ green\ value\ (0-255)\r\n\ @param\ \ \ int\ blue\ value\ (0-255)\r\n\ @param\ \ \ int\ alpha\ value\ (0-255)\r\n\ \r\n\ @return\ int\ \ Integer\ representing\ 32\ bit\ integer\ pixel\ ready\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ BufferedImage\r\n
comment17.params=bi
comment17.target=java.awt.image.BufferedImage\ deepCopy(java.awt.image.BufferedImage)
comment18.params=bi\ removedColor
comment18.target=java.awt.image.BufferedImage\ removeColor(java.awt.image.BufferedImage,\ java.lang.String)
comment19.params=bi\ swapColors
comment19.target=java.awt.image.BufferedImage\ swapColors(java.awt.image.BufferedImage,\ java.lang.String)
comment2.params=bi
comment2.target=java.awt.image.BufferedImage\ rotate90Clockwise(java.awt.image.BufferedImage)
comment3.params=bi
comment3.target=java.awt.image.BufferedImage\ rotate90CounterClockwise(java.awt.image.BufferedImage)
comment4.params=bi
comment4.target=java.awt.image.BufferedImage\ rotate180(java.awt.image.BufferedImage)
comment5.params=bi
comment5.target=java.awt.image.BufferedImage\ flipHorizontal(java.awt.image.BufferedImage)
comment6.params=bi
comment6.target=java.awt.image.BufferedImage\ flipVertical(java.awt.image.BufferedImage)
comment7.params=bi
comment7.target=java.awt.image.BufferedImage\ greyScale(java.awt.image.BufferedImage)
comment8.params=bi
comment8.target=java.awt.image.BufferedImage\ sepia(java.awt.image.BufferedImage)
comment9.params=bi
comment9.target=java.awt.image.BufferedImage\ redify(java.awt.image.BufferedImage)
numComments=20
